@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    scroll-behavior: smooth;
  }
  
  body {
    @apply bg-black cursor-none;
  }
}

.custom-cursor {
  width: 8px;
  height: 8px;
  background: #ff2d2d;
  border-radius: 50%;
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  transform: translate(-50%, -50%);
  transition: width 0.3s cubic-bezier(0.23, 1, 0.32, 1),
              height 0.3s cubic-bezier(0.23, 1, 0.32, 1),
              border-radius 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

.custom-cursor::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 32px;
  height: 32px;
  border: 1px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

/* Text hover effect */
a:hover ~ .custom-cursor,
button:hover ~ .custom-cursor,
h1:hover ~ .custom-cursor,
h2:hover ~ .custom-cursor,
h3:hover ~ .custom-cursor,
p:hover ~ .custom-cursor {
  width: 100%;
  height: 100%;
  border-radius: 0;
  background: transparent;
  mix-blend-mode: difference;
}

a:hover ~ .custom-cursor::after,
button:hover ~ .custom-cursor::after,
h1:hover ~ .custom-cursor::after,
h2:hover ~ .custom-cursor::after,
h3:hover ~ .custom-cursor::after,
p:hover ~ .custom-cursor::after {
  border-radius: 0;
  border: none;
  background: rgba(255, 255, 255, 1);
  width: 100%;
  height: 100%;
}

/* Smooth scrolling for sections */
section {
  scroll-margin-top: 80px;
}

/* Glassmorphism effects */
.glass-card {
  @apply bg-white/10 backdrop-blur-lg border border-white/20;
}

/* Gradient text animations */
.animate-gradient {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-600;
  background-size: 200% 200%;
  animation: gradient 8s linear infinite;
}

@keyframes gradient {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* Character animation container */
.char {
  display: inline-block;
  transform-origin: bottom;
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Parallax layers */
.parallax-layer {
  will-change: transform;
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1);
} 